function pwShadow(pw){
  var tmp = pw.split('');
  var clientArr = [];
  tmp.map(function(val, index){
    return clientArr.push(index);
  });
  
  return clientArr;
}

function makeid(len) {
    var text = "";
    var stringSet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

    for( var i=0; i < len; i++ )
        text += stringSet.charAt(Math.floor(Math.random() * stringSet.length));

    return text;
}

function pwShadow(pw){
  var tmp = pw.split('');
  var clientArr = [];
  tmp.map(function(val, index){
    return clientArr.push(index);
  });
  
  return clientArr;
}

function stringSelect(pw) {
  var sh = pw.length/2;
  return pw.split('').sort().splice(sh, sh);
}

function sumitup(array) {return array.reduce(function(a, b){return a+b;});}

function mapBuild(pw, cc){
  var tmp = pwShadow(pw);
  var pwArr = pw.split('');  
  
  var compass = [];
  var map = pwArr.map(function(val){
    
    //Let's build our map and compass
    //check if looped value is located in stringSelect() string set
    if(cc.indexOf(val) > -1){
      //exists in array
      return pwArr.indexOf(val);
    } else {
      //does NOT exists in array, build compass, add to map
      compass.push(pwArr.indexOf(val));
      return val;
    }
    
  });
  
  return [compass, mapSplash(map, sumitup(compass))];
}

function mapSplash(map, sum){
  return map.map(function(val){
    return val + makeid(sum);
  }).join('');
}


var password = "password";

console.log(mapBuild(password, stringSelect(password)));
